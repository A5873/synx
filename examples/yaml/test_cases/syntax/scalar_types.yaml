# YAML Scalar Types Test File
# This file demonstrates various YAML scalar types with valid and invalid syntax
# =============================================
# String Types
# =============================================

# Valid string types
strings:
  # Plain unquoted string
  plain: This is a plain string

  # Double-quoted string (processes escape sequences)
  double_quoted: "This string has \"quotes\" and \n newlines"

  # Single-quoted string (preserves backslashes)
  single_quoted: 'This string has ''escaped quotes'' but \n is not a newline'

  # Folded style (>): newlines become spaces
  folded_style: >
    This is a multi-line
    folded string. Newlines will
    be replaced with spaces.

    Blank lines denote paragraph breaks.

  # Literal style (|): preserves newlines
  literal_style: |
    This is a multi-line
    literal string. Newlines are
    preserved exactly as written.

    Blank lines are kept as well.

  # Chomp modifiers
  folded_strip: >-  # Strip all trailing newlines
    Text with trailing
    newlines stripped
  folded_keep: >+   # Keep all trailing newlines
    Text with trailing
    newlines preserved

# Invalid string examples
invalid_strings:
  # Unclosed quotes are invalid
  unclosed_quotes: "This string doesn't close

  # Tab characters in indentation problem
  # Note: Tab characters in YAML indentation are not allowed
  # The following demonstrates proper indentation with spaces:
  # - Correct: proper_indentation uses spaces (shown as spaces)
  # - Incorrect: tab_indentation uses tabs (shown as a tab below)
  #     tab_example: this would fail if uncommented

  # Control characters in unquoted strings
  control_chars: This has a bell char

# =============================================
# Numeric Types
# =============================================

# Valid numeric formats
numbers:
  # Integer formats
  decimal: 123
  octal: 0o123        # Octal format (leading 0o)
  hexadecimal: 0xFF   # Hex format (leading 0x)

  # Float formats
  float: 3.14159
  scientific: 6.02e23
  infinity: .inf      # Positive infinity
  neg_infinity: -.inf  # Negative infinity
  not_a_number: .nan  # Not a number

  # Invalid numeric formats (parsed as strings by YAML)
  invalid:
    leading_zero: 0123        # Parsed as string in YAML 1.2 (octal in 1.1)
    comma_sep: 1,000,000      # Parsed as string (commas not allowed)

# =============================================
# Boolean Types
# =============================================

# Valid boolean formats
booleans:
  # True values (canonical forms)
  true_canonical: true
  true_alt1: true     # Using canonical form (was True)
  true_alt2: true     # Using canonical form (was TRUE)
  true_alt3: true     # Using canonical form (was yes)
  true_alt4: true     # Using canonical form (was Yes)
  true_alt5: true     # Using canonical form (was on)
  true_alt6: true     # Using canonical form (was ON)

  # False values (canonical forms)
  false_canonical: false
  false_alt1: false   # Using canonical form (was False)
  false_alt2: false   # Using canonical form (was FALSE)
  false_alt3: false   # Using canonical form (was no)
  false_alt4: false   # Using canonical form (was No)
  false_alt5: false   # Using canonical form (was off)
  false_alt6: false   # Using canonical form (was OFF)

  # Invalid boolean-like values (parsed as strings)
  invalid:
    maybe: maybe      # Parsed as string (not a valid boolean)
    y: y              # Parsed as string (yes/no need full spelling)
    t: t              # Parsed as string

# =============================================
# Null Types
# =============================================

# Valid null formats
nulls:
  null_canonical: null
  null_alt1: null    # Using canonical form (was Null)
  null_alt2: null    # Using canonical form (was NULL)
  null_alt3: ~       # Tilde is valid null
  null_empty:        # Empty value is null

  # Common confusion
  null_string: 'null'  # This is a string, not null
  tilde_string: '~'    # This is a string, not null

# =============================================
# Date and Time Types
# =============================================

# Valid date/time formats (ISO 8601)
dates_and_times:
  date: 2025-04-15
  datetime: 2025-04-15T15:16:20Z
  datetime_tz: 2025-04-15T15:16:20+03:00

  # Invalid date format (parsed as string)
  invalid_date: 15/04/2025  # Not ISO 8601 format

# =============================================
# Special Values
# =============================================

# Binary data example (special YAML tag)
special_values:
  # Binary data (base64 encoded GIF image)
  binary_data: !!binary |
    R0lGODlhDAAMAIQAAP//9/X17unp5WZmZgAAAOfn515eXvPz7Y6OjuDg4J+fn5
    OTk6enp56enmlpaWNjY6Ojo4SEhP/++f/++f/++f/++f/++f/++f/++f/++f/+
    +f/++f/++f/++f/++f/++SH+Dk1hZGUgd2l0aCBHSU1QACwAAAAADAAMAAAFLC
    AgjoEwnuNAFOhpEMTRiggcz4BNJHrv/zCFcLiwMWYNG84BwwEeECcgggoBADs=

# End of YAML scalar types examples