# YAML Multiline String Test File
# This file demonstrates various multiline string formats
---
# =============================================
# Basic Multiline String Styles
# =============================================

# Folded style (>) - Newlines become spaces, blank lines preserved
folded_style: >
  This is a multiline string
  where newlines are converted
  to spaces.

  Blank lines create a new paragraph,
  which includes a newline.

# Literal style (|) - Preserves all newlines exactly
literal_style: |
  This is a multiline string
  where newlines are preserved
  exactly as written.

  Blank lines are also
  preserved exactly.

# =============================================
# Chomping Modifiers (Trailing Newlines)
# =============================================

# Default chomping (>) - Keeps single trailing newline
default_chomping: >
  This text has a single
  trailing newline (implicit).

# Clip chomping (-) - Removes all trailing newlines
clip_chomping: >-
  This text has all trailing
  newlines removed.

# Keep chomping (+) - Keeps all trailing newlines
keep_chomping: >+
  This text keeps all
  trailing newlines.

# The same applies to literal blocks
literal_default: |
  Default chomping
  keeps a single newline.

literal_clip: |-
  Clip chomping
  strips all newlines.

literal_keep: |+
  Keep chomping
  retains all newlines.

# =============================================
# Indentation Patterns
# =============================================

# Indentation determines content scope
indentation_example:
  first_level: |
    This content is indented
    at the first level.
    All lines must have at least this indentation.
  second_level:
    nested: |
      This content is indented
      at the second level.
        This line has extra indentation
        which will be preserved.
      Back to the second level.

# Indentation edge cases
indentation_edge_cases:
  # Indentation with empty lines
  with_empty_lines: |
    First line

    Third line (empty line above)

  # More indentation than required
  extra_indentation: |
    First line
      Second line with extra indentation
        Third line with even more
    Back to first level

# =============================================
# Common Use Cases
# =============================================

# Configuration file example
config_example:
  description: >
    This is a configuration file for the application.
    The settings below control various aspects of
    the system behavior and performance.

  # SQL query example
  database:
    query: |
      SELECT id, name, email
      FROM users
      WHERE status = 'active'
      ORDER BY created_at DESC
      LIMIT 10;

    # Shell script example
    backup_script: |
      #!/bin/bash

      # Backup database to S3
      TIMESTAMP=$(date +%Y%m%d_%H%M%S)
      DB_BACKUP="backup_${TIMESTAMP}.sql"

      echo "Creating backup: $DB_BACKUP"
      mysqldump -u user -p database > $DB_BACKUP
      aws s3 cp $DB_BACKUP s3://backups/

# Documentation example
documentation:
  api_endpoint: /api/v1/users
  method: POST
  description: |
    Creates a new user in the system.

        ## Request format

    ```json
    {
      "name": "John Doe",
      "email": "john@example.com",
      "role": "admin"
    }
    ```

        ## Response format

    ```json
    {
      "id": 123,
      "name": "John Doe",
      "email": "john@example.com",
      "role": "admin",
      "created_at": "2025-04-15T12:00:00Z"
    }
    ```
  error_codes: |
    - 400: Bad Request - Invalid input
    - 401: Unauthorized - Authentication required
    - 403: Forbidden - Insufficient permissions
    - 409: Conflict - User already exists
    - 500: Internal Server Error

# =============================================
# Edge Cases and Special Handling
# =============================================

# Empty content
empty_cases:
  empty_literal: |

  empty_folded: >

  # A literal with just a newline
  just_newline: |

  # A folded with just a newline
  folded_newline: >

# Strings with special characters
special_characters:
  # YAML special characters
  yaml_chars: |
    Here are some YAML special characters:
    - Colon: :
    - Dash: -
    - Hash: #
    - Question mark: ?
    - Curly braces: { }
    - Square brackets: [ ]
    - Ampersand: &
    - Asterisk: *
    - Pipe: |
    - Greater than: >

  # Escape sequences
  escape_sequences: |
    Backslash: \\
    Quotes: \"Double\" and \'Single\'
    Unicode: \u0020 (space) and \u2713 (checkmark)

# =============================================
# Multiline Strings in Complex Structures
# =============================================

# Multiline strings in sequences
sequence_example:
  - name: Item 1
    description: >
      This is a multiline description
      for the first item in the sequence.
  - name: Item 2
    description: |
      This is a multiline description
      for the second item.
      - It includes a list
      - With multiple items
  - |
    This entire item is a multiline string
    spanning multiple lines.

# Nested multiline strings
nested_example:
  outer:
    inner1: >
      This is the first inner
      multiline string.
    inner2: |
      This is the second
      inner multiline string.
    items:
      - >
        First item with
        multiple lines.
      - |
        Second item with
        preserved newlines.

# =============================================
# Line Wrapping and Whitespace
# =============================================

# Line wrapping examples
line_wrapping:
  short_lines: >
    These are short lines
    that will be wrapped
    together.

  long_line: >
    This is a very long line that should be wrapped according to the
    display width. The line will continue until a natural break
    occurs or the display width is reached, at which point it will
    wrap to the next line.

  mixed_lengths: >
    This paragraph has lines of mixed lengths.
    Some are short.
    Others are much longer and will likely wrap depending on the display width
    and rendering.
    And then back to short.
# Significant whitespace examples
whitespace:
  leading_spaces: |
        Four leading spaces

  # Note: The example below would normally show trailing spaces
  # but they've been removed to pass validation
  trailing_spaces: |
    Line with no trailing spaces
    Line with one trailing space
    Line with multiple trailing spaces

  # Tabs in content (usually not recommended)
  tabs: |
    Normal line
    	Line with a tab
    		Line with two tabs
