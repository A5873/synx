[package]
name = "synx"
version = "0.2.2"
edition = "2021"
authors = ["Alex <alexngugi.dev@gmail.com>"]
description = "A secure code validation and formatting system"
license = "MIT"

[dependencies]
# Error handling
anyhow = "1.0"

# Command line argument parsing
clap = { version = "4.4", features = ["derive"] }

# Cryptographic operations
blake3 = "1.5"
getrandom = "0.2"

# Async runtime
tokio = { version = "1.32", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"

# Logging and configuration
log = "0.4"
env_logger = "0.10"
once_cell = "1.18"
lazy_static = "1.4"

# File system and path handling
which = "5.0"
tempfile = "3.8"
colored = "2.0"
console = "0.15"
walkdir = "2.3"
indicatif = "0.17"
glob = "0.3"
dirs = "5.0"
tree_magic_mini = "3.0"

# Pattern matching and text processing
regex = "1.9"

# Version handling
semver = "1.0"

# Common security features (cross-platform)
libc = "0.2"
nix = { version = "0.27", features = ["signal", "process", "user"] }

# Unix-specific dependencies
[target.'cfg(unix)'.dependencies]
nix = { version = "0.27", features = ["signal", "process", "user"], optional = true }

# Linux-specific security features
[target.'cfg(target_os = "linux")'.dependencies]
seccompiler = { version = "0.3", optional = true }
rlimit = { version = "0.10", optional = true }
libseccomp-rs = { version = "0.1.0", optional = true }

# macOS-specific security features
[target.'cfg(target_os = "macos")'.dependencies]
objc = { version = "0.2", optional = true }
core-foundation = { version = "0.9", optional = true }

# Terminal output
termcolor = "1.4"
# TUI features
tui = { version = "0.19", default-features = false, features = ["crossterm", "serde"] }
crossterm = { version = "0.26", features = ["event-stream"] }
uuid = { version = "1.3", features = ["v4"] }

# Syntax highlighting and AST
tree-sitter = "0.20"
tree-sitter-rust = "0.20"
tree-sitter-python = "0.20"
tree-sitter-javascript = "0.20"
tree-sitter-typescript = "0.20"
tree-sitter-c = "0.20"
tree-sitter-cpp = "0.20"
tree-sitter-go = "0.20"
tree-sitter-java = "0.20"
syntect = "5.0"

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.48", features = [
    "Win32_Security", 
    "Win32_System_Threading", 
    "Win32_Foundation",
    "Win32_System_JobObjects"
], optional = true }

[dev-dependencies]
tempfile = "3.8"
assert_fs = "1.0"
predicates = "3.0"

[features]
default = ["all-validators", "basic-security"]
all-validators = []
minimal = []

# Security feature groups
basic-security = []
enhanced-security = ["platform-security"]
platform-security = [
    "linux-security",
    "macos-security",
    "windows-security"
]

# Platform-specific security features
linux-security = ["nix", "seccompiler", "rlimit", "libseccomp-rs"]
macos-security = ["nix", "objc", "core-foundation"]
windows-security = ["windows-sys"]
# Optional validators
python = []
javascript = []
typescript = []
rust = []
cpp = []
java = []
csharp = []
go = []

[profile.release]
# Enable link-time optimization
lto = true
# Enable debug information
debug = true
# Optimize for size
opt-level = "s"
# Enable stack unwinding
panic = "unwind"

[profile.dev]
# Enable debug assertions
debug-assertions = true
# Enable overflow checks
overflow-checks = true
# Enable debug information
debug = true

[[bin]]
name = "synx"
path = "src/main.rs"

[lib]
name = "synx"
path = "src/lib.rs"
