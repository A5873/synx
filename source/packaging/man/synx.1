.TH SYNX 1 "May 2025" "synx 0.2.1" "User Commands"
.SH NAME
synx \- universal syntax validator and linter dispatcher
.SH SYNOPSIS
.B synx
[\fIOPTIONS\fR] [\fIFILES\fR...]
.SH DESCRIPTION
.B synx
is a command-line tool that inspects files and validates their syntax by automatically detecting the filetype and dispatching to appropriate validators or linters.
.SH OPTIONS
.TP
.BR \-w ", " \-\-watch
Watch files for changes and revalidate automatically.
.TP
.BR \-v ", " \-\-verbose
Show verbose output including detailed validation results.
.TP
.BR \-c ", " \-\-config =\fIFILE\fR
Use specific config file (default: ~/.config/synx/config.toml).
.TP
.BR \-\-interval =\fISECONDS\fR
Set watch interval in seconds (default: 2).
.TP
.BR \-\-init\-config
Initialize default configuration file.
.TP
.BR \-s ", " \-\-strict
Strict mode - treat warnings as errors.
.SH SUPPORTED LANGUAGES
.TP
.B Rust
Uses rustc for syntax and type checking
.TP
.B C/C++
Uses gcc/g++ with -Wall and -pedantic
.TP
.B Java
Uses javac with -Werror and checkstyle
.TP
.B Go
Uses go vet, gofmt, and golangci-lint
.TP
.B TypeScript
Uses tsc and eslint
.TP
.B Python
Uses python -m py_compile, mypy, and pylint
.TP
.B JavaScript
Uses node --check
.TP
.B JSON
Uses jq
.TP
.B YAML
Uses yamllint
.TP
.B HTML
Uses tidy
.TP
.B CSS
Uses csslint
.TP
.B Shell
Uses shellcheck
.SH EXAMPLES
.TP
Validate a single file:
.B synx script.py
.TP
Watch mode with multiple files:
.B synx -w config.yaml script.py
.TP
Strict validation with verbose output:
.B synx -sv config.json
.SH FILES
.TP
.I ~/.config/synx/config.toml
Default configuration file location
.SH AUTHOR
Written by Alex <alexngugi.dev@gmail.com>
.SH BUGS
Report bugs at: https://github.com/A5873/synx/issues
.SH COPYRIGHT
Copyright Â© 2025 Alex. Licensed under MIT.
